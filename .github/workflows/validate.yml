name: Validate, Test and Deploy

on:
  push:
    branches: [ main, master, 1.0 ]
  pull_request:
    branches: [ main, master, 1.0 ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: horilla_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libcairo2-dev gcc

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set up test environment
      run: |
        cp .env.dist .env
        echo "DEBUG=True" >> .env
        echo "SECRET_KEY=test-secret-key-for-ci" >> .env
        echo "DATABASE_URL=postgres://postgres:postgres@localhost:5432/horilla_test" >> .env
        echo "ALLOWED_HOSTS=localhost,127.0.0.1" >> .env

    - name: Run migrations
      run: |
        echo "=== Django Check ==="
        python manage.py check
        echo "=== Show Migrations ==="
        python manage.py showmigrations
        echo "=== Apply Migrations ==="
        python manage.py migrate --verbosity=2

    - name: Collect static files
      run: |
        python manage.py collectstatic --noinput

    - name: Validation Summary
      run: |
        echo "## ✅ Validation Complete" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **Dependencies**: Installed successfully" >> $GITHUB_STEP_SUMMARY
        echo "- **Migrations**: Applied successfully" >> $GITHUB_STEP_SUMMARY
        echo "- **Static Files**: Collected successfully" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "🚀 **Automatic deployment will begin after validation**" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "📋 **Next Steps:**" >> $GITHUB_STEP_SUMMARY
        echo "- Biometric migrations will be applied automatically" >> $GITHUB_STEP_SUMMARY
        echo "- Application will be deployed to production server" >> $GITHUB_STEP_SUMMARY
        echo "- No manual intervention required" >> $GITHUB_STEP_SUMMARY

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Stop Existing Processes
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: 65.20.74.159
        username: milestonehre
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        timeout: 5m
        script: |
          pkill -f 'gunicorn.*horilla' || true
          echo 'Process cleanup completed'
          
    - name: Update Code
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: 65.20.74.159
        username: milestonehre
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        timeout: 10m
        script: |
          if [ -d 'horilla-app' ]; then
            echo "Updating existing installation..."
            cd horilla-app
            cp horilla_production.sqlite3 ../horilla_production.sqlite3.backup 2>/dev/null || echo "No existing database to backup"
            git fetch origin main
            git reset --hard origin/main
            cp ../horilla_production.sqlite3.backup horilla_production.sqlite3 2>/dev/null || echo "No database backup to restore"
          else
            echo "Fresh installation..."
            git clone https://github.com/mujehoxe/horilla.git horilla-app
          fi
          
    - name: Setup Environment
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: 65.20.74.159
        username: milestonehre
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        timeout: 15m
        script: |
          cd horilla-app
          
          # Create production environment
          cat > .env << 'EOF'
          DEBUG=False
          SECRET_KEY=django-prod-$(openssl rand -hex 16)
          ALLOWED_HOSTS=65.20.74.159,localhost,127.0.0.1
          CSRF_TRUSTED_ORIGINS=http://65.20.74.159:8002
          TIME_ZONE=UTC
          DB_ENGINE=django.db.backends.sqlite3
          DB_NAME=horilla_production.sqlite3
          EOF
          
          # Setup Python environment
          if [ -d 'venv' ]; then
            source venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt --upgrade
          else
            python3 -m venv venv
            source venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt
          fi
          
    - name: Run Migrations and Deploy
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: 65.20.74.159
        username: milestonehre
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        timeout: 10m
        script: |
          cd horilla-app
          source venv/bin/activate
          
          # Run migrations automatically (without generating new migrations)
          echo "Running migrations..."
          python manage.py migrate --verbosity=2
          
          # Collect static files
          echo "Collecting static files..."
          python manage.py collectstatic --noinput
          
          # Create admin user if needed
          python manage.py createhorillauser --first_name admin --last_name admin --username admin --password admin --email admin@horilla.com --phone 1234567890 || echo 'Admin user already exists'
          
          # Start application
          echo "Starting application..."
          nohup gunicorn --bind 0.0.0.0:8002 --workers 2 --timeout 60 horilla.wsgi:application > horilla.log 2>&1 &
          
          # Wait and verify
          sleep 5
          if pgrep -f "gunicorn.*horilla" > /dev/null; then
            echo "✅ Deployment completed successfully!"
            echo "🌐 Application is accessible at http://65.20.74.159:8002"
            echo "🔑 Login: admin / admin"
          else
            echo "❌ Failed to start application. Check logs:"
            tail -10 horilla.log
            exit 1
          fi
    
    - name: Deployment Summary
      run: |
        echo "## 🚀 Production Deployment Complete" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **Server**: 65.20.74.159:8002" >> $GITHUB_STEP_SUMMARY
        echo "- **Migrations**: Applied automatically" >> $GITHUB_STEP_SUMMARY
        echo "- **Biometric Features**: Now available in production" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "🔑 **Login**: admin / admin" >> $GITHUB_STEP_SUMMARY
